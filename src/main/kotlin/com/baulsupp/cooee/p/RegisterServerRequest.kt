// Code generated by Wire protocol buffer compiler, do not edit.
// Source: com.baulsupp.cooee.p.RegisterServerRequest in api.proto
package com.baulsupp.cooee.p

import com.squareup.wire.FieldEncoding
import com.squareup.wire.Message
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.Syntax.PROTO_3
import com.squareup.wire.WireField
import com.squareup.wire.internal.checkElementsNotNull
import com.squareup.wire.internal.immutableCopyOf
import com.squareup.wire.internal.sanitize
import kotlin.Any
import kotlin.Boolean
import kotlin.Int
import kotlin.Long
import kotlin.String
import kotlin.collections.List
import kotlin.jvm.JvmField
import okio.ByteString

class RegisterServerRequest(
  commands: List<String> = emptyList(),
  values: List<String> = emptyList(),
  unknownFields: ByteString = ByteString.EMPTY
) : Message<RegisterServerRequest, RegisterServerRequest.Builder>(ADAPTER, unknownFields) {
  @field:WireField(
    tag = 1,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.REPEATED
  )
  @JvmField
  val commands: List<String> = immutableCopyOf("commands", commands)

  @field:WireField(
    tag = 2,
    adapter = "com.squareup.wire.ProtoAdapter#STRING",
    label = WireField.Label.REPEATED
  )
  @JvmField
  val values: List<String> = immutableCopyOf("values", values)

  override fun newBuilder(): Builder {
    val builder = Builder()
    builder.commands = commands
    builder.values = values
    builder.addUnknownFields(unknownFields)
    return builder
  }

  override fun equals(other: Any?): Boolean {
    if (other === this) return true
    if (other !is RegisterServerRequest) return false
    if (unknownFields != other.unknownFields) return false
    if (commands != other.commands) return false
    if (values != other.values) return false
    return true
  }

  override fun hashCode(): Int {
    var result = super.hashCode
    if (result == 0) {
      result = unknownFields.hashCode()
      result = result * 37 + commands.hashCode()
      result = result * 37 + values.hashCode()
      super.hashCode = result
    }
    return result
  }

  override fun toString(): String {
    val result = mutableListOf<String>()
    if (commands.isNotEmpty()) result += """commands=${sanitize(commands)}"""
    if (values.isNotEmpty()) result += """values=${sanitize(values)}"""
    return result.joinToString(prefix = "RegisterServerRequest{", separator = ", ", postfix = "}")
  }

  fun copy(
    commands: List<String> = this.commands,
    values: List<String> = this.values,
    unknownFields: ByteString = this.unknownFields
  ): RegisterServerRequest = RegisterServerRequest(commands, values, unknownFields)

  class Builder : Message.Builder<RegisterServerRequest, Builder>() {
    @JvmField
    var commands: List<String> = emptyList()

    @JvmField
    var values: List<String> = emptyList()

    fun commands(commands: List<String>): Builder {
      checkElementsNotNull(commands)
      this.commands = commands
      return this
    }

    fun values(values: List<String>): Builder {
      checkElementsNotNull(values)
      this.values = values
      return this
    }

    override fun build(): RegisterServerRequest = RegisterServerRequest(
      commands = commands,
      values = values,
      unknownFields = buildUnknownFields()
    )
  }

  companion object {
    @JvmField
    val ADAPTER: ProtoAdapter<RegisterServerRequest> = object : ProtoAdapter<RegisterServerRequest>(
      FieldEncoding.LENGTH_DELIMITED, 
      RegisterServerRequest::class, 
      "type.googleapis.com/com.baulsupp.cooee.p.RegisterServerRequest", 
      PROTO_3, 
      null
    ) {
      override fun encodedSize(value: RegisterServerRequest): Int {
        var size = value.unknownFields.size
        size += ProtoAdapter.STRING.asRepeated().encodedSizeWithTag(1, value.commands)
        size += ProtoAdapter.STRING.asRepeated().encodedSizeWithTag(2, value.values)
        return size
      }

      override fun encode(writer: ProtoWriter, value: RegisterServerRequest) {
        ProtoAdapter.STRING.asRepeated().encodeWithTag(writer, 1, value.commands)
        ProtoAdapter.STRING.asRepeated().encodeWithTag(writer, 2, value.values)
        writer.writeBytes(value.unknownFields)
      }

      override fun decode(reader: ProtoReader): RegisterServerRequest {
        val commands = mutableListOf<String>()
        val values = mutableListOf<String>()
        val unknownFields = reader.forEachTag { tag ->
          when (tag) {
            1 -> commands.add(ProtoAdapter.STRING.decode(reader))
            2 -> values.add(ProtoAdapter.STRING.decode(reader))
            else -> reader.readUnknownField(tag)
          }
        }
        return RegisterServerRequest(
          commands = commands,
          values = values,
          unknownFields = unknownFields
        )
      }

      override fun redact(value: RegisterServerRequest): RegisterServerRequest = value.copy(
        unknownFields = ByteString.EMPTY
      )
    }

    private const val serialVersionUID: Long = 0L
  }
}
